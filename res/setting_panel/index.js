// noinspection JSUnresolvedReference

const packsList = document.getElementById('packs-list');
const abbreviationsList = document.getElementById('abbreviations-list');
const autogeneratedAbbreviationsList = document.getElementById('autogenerated-abbreviations-list');

let currentPack = null;

window.addEventListener('pywebviewready', () => {
    loadPacks();
});

function loadPacks() {
    pywebview.api.get_packs().then(packs => {
        packs.forEach(pack => {
            const packItem = document.createElement('a');
            packItem.classList.add('nav-link');
            packItem.href = '#';
            packItem.innerText = pack;
            packItem.addEventListener('click', () => {
                setPack(pack);
            });
            packsList.appendChild(packItem);
        });
    });
}

function setPack(packName) {
    // update abbreviations list
    abbreviationsList.innerHTML = '';
    autogeneratedAbbreviationsList.innerHTML = '';
    pywebview.api.get_pack_abbreviations(packName).then(abbreviations => {
        abbreviations.forEach((entry, _) => {
            const [key, [value, autogenerated]] = entry;
            let list = abbreviationsList;

            if (autogenerated) {
                list = autogeneratedAbbreviationsList;
            }

            appendAbbreviation(list, key, value);
        });
    });

    // update active pack
    packsList.querySelectorAll('a').forEach(a => {
        a.classList.remove('active');
        if (a.innerText === packName) {
            a.classList.add('active');
        }
    });
    currentPack = packName;
}

abbreviationsList.addEventListener('dblclick', e => {
    const row = e.target.closest('tr');
    if (row) {
        const abbreviation = row.querySelector('code').innerText;
        const meaning = row.querySelector('td:nth-child(2)').innerText;

        currentRow = row;
        currentAbbreviation = abbreviation;
        currentMeaning = meaning;

        const modal = new bootstrap.Modal(document.getElementById('change-abbreviation-modal'));
        modal.show();
    }
});

const changeAbbreviationModal = document.getElementById('change-abbreviation-modal');
const abbreviationInput = changeAbbreviationModal.querySelector('input[name="abbreviation"]');
const meaningInput = changeAbbreviationModal.querySelector('input[name="meaning"]');
let currentRow = null;
let currentAbbreviation = null;
let currentMeaning = null;

changeAbbreviationModal.addEventListener('show.bs.modal', e => {
    abbreviationInput.value = currentAbbreviation;
    meaningInput.value = currentMeaning;
});

function appendAbbreviation(list, key, value) {
    const row = document.createElement('tr');

    const abbreviation = document.createElement('td');
    const codeblock = document.createElement('code');
    codeblock.innerText = key;
    abbreviation.appendChild(codeblock);
    row.appendChild(abbreviation);

    const meaning = document.createElement('td');
    meaning.innerText = value;
    row.appendChild(meaning);

    list.appendChild(row);
}

function applyAbbreviationChange() {
    pywebview.api
      .edit_abbreviation(currentPack, currentAbbreviation, abbreviationInput.value, meaningInput.value)
      .then(() => {
          currentRow.querySelector('code').innerText = abbreviationInput.value;
          currentRow.querySelector('td:nth-child(2)').innerText = meaningInput.value;

          // update autogenerated abbreviations
          pywebview.api
            .get_autogenerated_abbreviations(currentPack)
            .then(abbreviations => {
                autogeneratedAbbreviationsList.innerHTML = '';
                abbreviations.forEach((entry, _) => {
                    const [key, [value, autogenerated]] = entry;

                    appendAbbreviation(autogeneratedAbbreviationsList, key, value);
                });
            });
      });
}